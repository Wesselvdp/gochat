package components

import (
	"fmt"
	"gochat/internal/schema"
)

func getAccountTheme(user *schema.GetUserRow) string {
	if user == nil {
		return ""
	}
	return fmt.Sprintf("<link rel=\"stylesheet\" href=\"/static/themes/%s.css\" />", user.AccountID.String)

}
func getAccountTitle(user *schema.GetUserRow) string {
	var accountPart string
	if user == nil {
		accountPart = ""
	} else {
		accountPart = "| " + user.AccountName.String
	}
	return fmt.Sprintf("<title>AÄ¿bert %s</title>", accountPart)
}

templ Header(user *schema.GetUserRow) {
	<head>
		<script src="https://unpkg.com/htmx.org@2.0.3" integrity="sha384-0895/pl2MU10Hqc6jd4RvrthNlDiE9U1tWmX7WRESftEDRosgxNsQG/Ze9YMRzHq" crossorigin="anonymous"></script>
		<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"/>
		<link rel="stylesheet" href="/static/frontend.css"/>
		<link rel="stylesheet" href={ "/static/themes/default.css" }/>
		<!-- Account-Specific Stylesheet -->
		@templ.Raw(getAccountTheme(user))
		<script src="/static/bundle.js" defer></script>
		<meta charset="UTF-8"/>
		<link rel="icon" type="image/x-icon" href="/static/favicon.ico"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		@templ.Raw(getAccountTitle(user))
	</head>
}

templ Body() {
	<body class="bg-background-primary">
		<main class="">
			{ children... }
		</main>
	</body>
}

templ NewChat(userName string) {
	<script>
	if (window.goChat) {
		window.goChat.conversation = null;
	}
	</script>
	<div class="flex-1 p-4 flex items-center justify-center w-full">
		<div class="w-full flex justify-center flex-col items-center">
			<div class="mb-4 text-center">
				<h1 class="h1 text-4xl t text-heading">Welkom, { userName } </h1>
				<h2 class="h2 block text-brand-secondary text-2xl">Veilig en versleuteld.</h2>
			</div>
			<user-input-form class="w-full"></user-input-form>
			// <text-area isNew="true" class="w-full"></text-area>
		</div>
	</div>
}

templ Component(componentName string, user *schema.GetUserRow) {
	if componentName == "avatar" {
		@Avatar(user)
	}
	if componentName == "newchat" {
		@NewChat(user.Name.String)
	}
}

// TODO: fix this hardcoded account shit
func getAvatar(accountID string) string {

	if accountID == "07edc5c8-b5a9-4c11-8f2b-31e0a4c5b686" {
		return fmt.Sprintf("url('/static/avatars/%s.png');", accountID)
	}
	if accountID == "8244b036-46c7-4b0f-886b-4b868ea0a8fa" {
		return fmt.Sprintf("url('/static/avatars/%s.png');", accountID)
	}
	if accountID == "e4694570-f591-4c52-bba9-a5865dc4ba09" {
		return fmt.Sprintf("url('/static/avatars/%s.svg');", accountID)
	}
	if accountID == "87d75e8f-4c88-4ff4-ba49-c3ee28263e56" {
		return "url('/static/avatars/df_logo.png')"
	}

	return "url('/static/avatars/albert.png')"
}

css primaryClassName(id string) {
	background-image: { templ.SafeCSSProperty(getAvatar(id)) };
	width: 34px;
	height: 34px;
	background-size: cover;
	background-position: center;
}

templ Avatar(user *schema.GetUserRow) {
	<div class={ primaryClassName(user.AccountID.String) }></div>
}

templ SideBar(user *schema.GetUserRow) {
	// Sidebar
	<nav class="bg-background-tertiary p-4 flex flex-col rounded-r-2xl w-[260px] min-h-full max-md:fixed">
		<div class="pointer-events-auto absolute left-2 top-3 z-20 md:hidden opacity-100">
			<button
				class="inline-flex
	  items-center
	  justify-center
	  relative
	  shrink-0
	  ring-offset-2
	  ring-offset-bg-300
	  ring-accent-main-100
	  focus-visible:outline-none
	  focus-visible:ring-1
	  disabled:pointer-events-none
	  disabled:opacity-50
	  disabled:shadow-none
	  disabled:drop-shadow-none text-text-200
	          border-transparent
	          transition-colors
	          font-styrene
	          active:bg-bg-400
	          hover:bg-bg-500/40
	          hover:text-text-100 h-8 w-8 rounded-md active:scale-95"
			><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 32 32"><path d="M26 16a1 1 0 0 1-1 1H5a1 1 0 0 1 0-2h20a1 1 0 0 1 1 1ZM5 9h18a1 1 0 1 0 0-2H5a1 1 0 0 0 0 2Zm16 14H5a1 1 0 0 0 0 2h16a1 1 0 0 0 0-2Z"></path></svg></button>
		</div>
		<div class="mb-4 items center justify-between hidden md:flex">
			<button>
				@Avatar(user)
			</button>
			<button hx-get="/component/newchat" hx-push-url="/" hx-target="#inner" class="flex items-center gap-8 justify-between">
				<span class="whitespace-pre">Nieuw gesprek</span>
				<span class="material-symbols-outlined">
					edit
				</span>
			</button>
		</div>
		<div>
			<div class="text-slate-500 mb-2">Vorige gesprekken</div>
			<div id="recentConversationsRoot"></div>
		</div>
		<div class="mt-auto">
			<a href="/logout" class="group flex items-center gap-4 opacity-70 hover:opacity-100 transition-all">
				<span class="material-symbols-outlined">
					logout
				</span>
				<span class="group-hover:opacity-100 opacity-0 transition-all">uitloggen</span>
			</a>
		</div>
	</nav>
}
